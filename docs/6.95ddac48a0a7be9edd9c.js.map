{"version":3,"sources":["./src/app/shared/placeholder/placeholder.directive.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/shared/loading-spinner/loading.spinner.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts"],"names":["PlaceHolderDirective","viewContainerRef","AlertComponent","close","this","emit","onClose","LoadingSpinnerComponent","AuthComponent","cFR","fb","auth","router","isLoginMode","isLoading","credentials","group","email","required","password","minLength","valid","controls","value","authObs","login","signup","subscribe","resData","navigate","errorMessage","showErrorAlert","reset","message","alertCmpFactory","resolveComponentFactory","hostViewContainerRef","alertHost","clear","componentRef","createComponent","instance","closeSub","unsubscribe","AuthModule","forChild","path","canActivate","component"],"mappings":"yNAMO,Y,MAAMA,EACX,YAAmBC,GAAA,KAAAA,oB,6CADRD,GAAoB,Y,uBAApBA,EAAoB,uC,GAA1B,GCCA,Q,MAAME,EALb,cAOW,KAAAC,MAAQ,IAAI,IAEtB,UACCC,KAAKD,MAAME,Q,6CALAH,I,uBAAAA,EAAc,qOCP3B,gBAAsB,gCAAS,EAAAI,aAC7B,gBACE,YAAG,QAAa,OAChB,gBACE,mBAAgC,gCAAS,EAAAA,aACvC,kBACF,OACF,OACF,OACF,Q,MAPO,0B,yVDKA,G,gBECA,Y,MAAMC,G,6CAAAA,I,uBAAAA,EAAuB,wGAJvB,gBAAsB,cAAW,cAAW,cAAW,cAAW,S,8sBAIxE,G,uCCDH,gBACE,8BACF,Q,uCACA,iBAAgC,gEAC9B,gBACE,kBAAmB,iBAAM,OACzB,kBACF,OACA,gBACE,mBAAsB,mBAAQ,OAC9B,mBACF,OACA,iBACE,qBAA8E,SAAqC,OACrH,OACA,kBACE,qBAA+C,iEAAyB,SAAiD,OAC3H,OACF,O,uBAfM,gCAUM,+CAAsE,8CAGN,+DCVzE,Y,MAAMC,EAQX,YAAoBC,EAAsCC,EAAyBC,EAA2BC,GAA1F,KAAAH,MAAsC,KAAAC,KAAyB,KAAAC,OAA2B,KAAAC,SAN9G,KAAAC,aAAuB,EAEvB,KAAAC,WAAqB,EAMrB,WACEV,KAAKW,YAAcX,KAAKM,GAAGM,MAAM,CAC/BC,MAAO,CAAC,GAAG,CAAC,IAAWC,SAAU,IAAWD,QAC5CE,SAAU,CAAC,GAAG,CAAC,IAAWD,SAAS,IAAWE,UAAU,OAI5D,eACEhB,KAAKS,aAAeT,KAAKS,YAO3B,WACE,IAAIT,KAAKW,YAAYM,MACnB,OAEF,MAAMN,EAAc,CAClBE,MAAOb,KAAKW,YAAYO,SAAgB,MAAEC,MAC1CJ,SAAUf,KAAKW,YAAYO,SAAmB,SAAEC,OAElD,IAAIC,EAEJpB,KAAKU,WAAY,EAEhBU,EADEpB,KAAKS,YACGT,KAAKO,KAAKc,MAAMV,GAEfX,KAAKO,KAAKe,OAAOX,GAG7BS,EAAQG,UAAUC,IAChBxB,KAAKU,WAAY,EACjBV,KAAKQ,OAAOiB,SAAS,CAAC,cAEtBC,IACE1B,KAAKU,WAAY,EACjBV,KAAK2B,eAAeD,KAIxB1B,KAAKW,YAAYiB,QAGX,eAAeC,GACrB,MAAMC,EAAmB9B,KAAKK,IAAI0B,wBAAwB,GACpDC,EAAuBhC,KAAKiC,UAAUpC,iBAC5CmC,EAAqBE,QAEtB,MAAMC,EAAeH,EAAqBI,gBAAgBN,GAC1DK,EAAaE,SAASR,QAAUA,EAChC7B,KAAKsC,SAAWH,EAAaE,SAAStC,MAAMwB,UAAU,KACpDvB,KAAKsC,SAASC,cACdP,EAAqBE,UAIxB,cACKlC,KAAKsC,UACNtC,KAAKsC,SAASC,e,6CAtEPnC,GAAa,0C,uBAAbA,EAAa,iD,MAAA,K,KAMb,GAAsB,G,gnBDnBnC,8BACA,gBACE,gBAKE,sBAGA,wBAgBF,OACF,Q,MApB6B,iCAG+B,oC,kECGrD,GCWA,Q,MAAMoC,G,8BAAAA,I,oDAAAA,IAAU,SAbZ,CACP,IACA,IACA,IAAaC,SACX,CAAC,CAAEC,KAAM,GAAIC,YAAa,CAAC,KAAYC,UAAW,KAEpD,KAGA,O,GAIG","file":"6.95ddac48a0a7be9edd9c.js","sourcesContent":["import { Directive, ViewContainerRef } from \"@angular/core\";\r\n\r\n\r\n@Directive({\r\n  selector: '[appPlaceholder]'\r\n})\r\nexport class PlaceHolderDirective{\r\n  constructor(public viewContainerRef: ViewContainerRef){}\r\n}","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.css']\r\n})\r\nexport class AlertComponent{\r\n @Input() message: string;\r\n @Output() close = new EventEmitter<void>();\r\n\r\n onClose(){\r\n  this.close.emit();\r\n }\r\n\r\n}","<div class=\"backdrop\" (click)=\"onClose()\">\r\n  <div class=\"alert-box\">\r\n    <p>{{ message }}</p>\r\n    <div class=\"alert-box-actions\">\r\n      <button class=\"btn btn-primary\" (click)=\"onClose()\">\r\n        Close\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector:'app-loading-spinner',\r\n  template: `<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>`,\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\n\r\nexport class LoadingSpinnerComponent{\r\n\r\n}","<ng-template appPlaceholder></ng-template>\r\n<div class=\"row justify-content-md-center\">\r\n  <div class=\"col col-sm-6\">\r\n    <!-- <div class=\"alert alert-danger\" *ngIf=\"error\">\r\n      <p>{{error}}</p>\r\n    </div> -->\r\n    <!-- <app-alert [message]=\"error\" *ngIf=\"error\" (close)=\"onHandleError()\"></app-alert> -->\r\n    <div class=\"text-center\" *ngIf=\"isLoading\">\r\n      <app-loading-spinner></app-loading-spinner>\r\n    </div>\r\n    <form [formGroup]=\"credentials\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">E-mail</label>\r\n        <input formControlName=\"email\" type=\"email\" id=\"email\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input formControlName=\"password\" type=\"password\" id=\"password\" class=\"form-control\">\r\n      </div>\r\n      <div class=\"mt-3\">\r\n        <button [disabled]=\"!credentials.valid\" class=\"btn btn-primary\" type=\"submit\">{{ isLoginMode? 'Login' : 'Sign Up'}}</button>\r\n      </div>\r\n      <div class=\"mt-2\">\r\n        <button  class=\"btn btn-primary\" type=\"button\" (click)=\"onSwitchMode()\">Switch to {{ !isLoginMode ? 'Login' : 'Sign Up'}}</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { PlaceHolderDirective } from './../shared/placeholder/placeholder.directive';\r\nimport { AlertComponent } from './../shared/alert/alert.component';\r\nimport { Router } from '@angular/router';\r\nimport { AuthResponseData } from './auth-response.interface';\r\nimport { AuthService } from './auth.service';\r\nimport { Component, ComponentFactoryResolver, OnInit, ViewChild, OnDestroy } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html'\r\n})\r\nexport class AuthComponent implements OnInit, OnDestroy{\r\n \r\n  isLoginMode: boolean = true;\r\n  credentials: FormGroup;\r\n  isLoading: boolean = false;\r\n  private closeSub: Subscription;\r\n  @ViewChild(PlaceHolderDirective, {static: false}) alertHost: PlaceHolderDirective; \r\n\r\n  constructor(private cFR: ComponentFactoryResolver,private fb: FormBuilder, private auth: AuthService, private router: Router){}\r\n\r\n  ngOnInit(){\r\n    this.credentials = this.fb.group({\r\n      email: ['',[Validators.required, Validators.email]],\r\n      password: ['',[Validators.required,Validators.minLength(6)]]\r\n    })\r\n  }\r\n\r\n  onSwitchMode(){\r\n    this.isLoginMode = !this.isLoginMode;\r\n  }\r\n\r\n  // onHandleError(){\r\n  //   this.error = null;\r\n  // }\r\n\r\n  onSubmit(){\r\n    if(!this.credentials.valid){\r\n      return;\r\n    }\r\n    const credentials = {\r\n      email: this.credentials.controls['email'].value,\r\n      password: this.credentials.controls['password'].value\r\n    }\r\n    let authObs: Observable<AuthResponseData>;\r\n\r\n    this.isLoading = true;\r\n    if(this.isLoginMode){\r\n     authObs = this.auth.login(credentials);\r\n    }else{\r\n      authObs = this.auth.signup(credentials);\r\n    }\r\n\r\n    authObs.subscribe(resData => {\r\n      this.isLoading = false;\r\n      this.router.navigate(['/recipes']);\r\n    },\r\n      errorMessage => {\r\n        this.isLoading = false;\r\n        this.showErrorAlert(errorMessage);\r\n      }\r\n    );\r\n    \r\n    this.credentials.reset();\r\n  }\r\n\r\n  private showErrorAlert(message: string){\r\n    const alertCmpFactory =  this.cFR.resolveComponentFactory(AlertComponent);\r\n    const hostViewContainerRef = this.alertHost.viewContainerRef;\r\n    hostViewContainerRef.clear();\r\n\r\n   const componentRef = hostViewContainerRef.createComponent(alertCmpFactory);\r\n   componentRef.instance.message = message;\r\n   this.closeSub = componentRef.instance.close.subscribe(()=>{\r\n     this.closeSub.unsubscribe();\r\n     hostViewContainerRef.clear();\r\n   });\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    if(this.closeSub){\r\n      this.closeSub.unsubscribe();\r\n    }\r\n  }\r\n \r\n}","import { SharedModule } from './../shared/shared.module';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n\r\n@NgModule({\r\n  declarations:[AuthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(\r\n      [{ path: '', canActivate: [AuthGuard], component: AuthComponent }]\r\n    ),\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    RouterModule,\r\n    AuthComponent\r\n  ]\r\n})\r\nexport class AuthModule{\r\n\r\n}"],"sourceRoot":"webpack:///"}