{"version":3,"sources":["./src/app/recipes-resolver.service.ts","./src/app/recipes/recipe-detail/recipe-detail.component.html","./src/app/recipes/recipe-detail/recipe-detail.component.ts","./src/app/recipes/recipe-edit/recipe-edit.component.html","./src/app/recipes/recipe-edit/recipe-edit.component.ts","./src/app/recipes/recipe-start/recipe-start.component.ts","./src/app/recipes/recipe-start/recipe-start.component.html","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","./src/app/recipes/recipe-list/recipe-list.component.html","./src/app/recipes/recipe-list/recipe-list.component.ts","./src/app/recipes/recipes-routing.module.ts","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes/recipes.module.ts"],"names":["RecipesResolverService","dataStorageService","recipesService","route","state","recipes","this","getRecipes","length","fetchRecipes","RecipeDetailComponent","recipeService","router","params","subscribe","id","recipe","getRecipe","addIngredients","ingredients","deleteRecipe","navigate","relativeTo","RecipeEditComponent","editMode","initForm","recipeName","imagePath","recipeDescription","recipeIngredients","name","description","forEach","ingredient","push","required","amount","pattern","recipeForm","updateRecipe","value","addRecipe","onCancel","get","console","log","index","removeAt","onSubmit","onAddIngredient","RecipeStartComponent","RecipeItemComponent","RecipeListComponent","subscription","recipesChanged","unsubscribe","routes","path","component","RecipesComponent","canActivate","children","resolve","RecipesRoutingModule","forChild","RecipesModule"],"mappings":"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","file":"7.27fa8a2049387b308521.js","sourcesContent":["import { RecipeService } from './recipes/recipes.service';\r\nimport { DataStorageService } from './shared/data-storage.service';\r\nimport { Recipe } from './recipes/recipes.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipesResolverService implements Resolve<Recipe[]>{\r\n  constructor(private dataStorageService: DataStorageService ,private recipesService: RecipeService){}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n    const recipes = this.recipesService.getRecipes();\r\n    if(recipes.length === 0 ){\r\n      return this.dataStorageService.fetchRecipes();\r\n    }\r\n   else{\r\n     return recipes;\r\n   }\r\n  }\r\n}","<div *ngIf=\"recipe\">\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <img [src]=\"recipe.imagePath\" alt=\"{{recipe.name}}\" class=\"img-responsive img-fixed\">\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <h1>{{recipe.name}}</h1>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      <div class=\"btn-group\">\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownManageRecipe\"\n          data-bs-toggle=\"dropdown\" aria-expanded=\"false\" [appDropdown]=\"'0px'\">\n          Manage Recipe <span class=\"caret\"></span>\n        </button>\n        <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownManageRecipe\">\n          <li><a class=\"dropdown-item\" (click)=\"onAddToShoppingList()\">Add to Shopping List</a></li>\n          <li><a class=\"dropdown-item\" [routerLink]=\"['edit']\">Edit Recipe</a></li>\n          <li><a class=\"dropdown-item\" (click)=\"onDeleteRecipe()\">Delete Recipe</a></li>\n        </ul>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-xs-12\">\n      {{recipe.description}}\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-12\">\n        <ul class=\"list-group\">\n          <div class=\"list-group-item\" *ngFor=\"let ingredient of recipe.ingredients\">\n            {{ingredient.name}} - {{ingredient.amount}}\n          </div>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ShoppingListService } from './../../shopping-list/shoping-list.service';\nimport { RecipeService } from './../recipes.service';\nimport { Recipe } from './../recipes.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  recipe: Recipe;\n  id: number;\n  constructor(private recipeService: RecipeService,  private route: ActivatedRoute, private router: Router) {\n  \n   }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params)=>{\n      this.id = +params['id'];\n      this.recipe = this.recipeService.getRecipe(this.id);\n    })\n  }\n\n  onAddToShoppingList(){\n    this.recipeService.addIngredients(this.recipe.ingredients);\n  }\n\n  onDeleteRecipe(){\n    this.recipeService.deleteRecipe(this.id);\n    this.router.navigate(['../'],{relativeTo: this.route});\n  }\n\n  \n}\n","<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-12\">\r\n          <button type=\"submit\" class=\"me-2 btn btn-success \" [disabled]=\"!recipeForm.valid\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"name\"\r\n            class=\"form-control\"\r\n            formControlName=\"name\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"imagePath\">Image URL</label>\r\n            <input \r\n            type=\"text\" \r\n            id=\"imagePath\" \r\n            class=\"form-control\"\r\n            formControlName=\"imagePath\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-12\">\r\n          <img [src]=\"recipeForm.get('imagePath').value\" alt=\"https://i.stack.imgur.com/y9DpT.jpg\" class=\"img-responsive\" style=\"max-width:100%;height:auto;object-fit: cover;\">\r\n        </div>\r\n      </div>\r\n      <div class=\"row mt-3\">\r\n        <div class=\"col-sm-12\">\r\n          <div class=\"form-group\">\r\n            <label for=\"description\">Description</label>\r\n            <textarea \r\n            type=\"text\" \r\n            id=\"description\" \r\n            class=\"form-control\" \r\n            rows=\"6\"\r\n            formControlName=\"description\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-3\" formArrayName=\"ingredients\">\r\n          <div class=\"row my-2\" \r\n          *ngFor=\"let ingredientCtrl of recipeForm.get('ingredients')['controls']; let i = index\" \r\n          [formGroupName]=\"i\">\r\n              <div class=\"col-sm-8\">\r\n                <input \r\n                formControlName=\"name\"\r\n                type=\"text\" \r\n                class=\"form-control\">\r\n              </div>\r\n              <div class=\"col-sm-2\">\r\n                <input \r\n                formControlName=\"amount\"\r\n                type=\"number\" \r\n                class=\"form-control\">\r\n              </div>\r\n              <div class=\"col-sm-2\">\r\n               <button class=\"btn btn-danger\" type=\"button\" (click)=\"onDeleteIngredient(i)\">X</button>\r\n              </div>\r\n        </div>\r\n      </div>\r\n      <hr/>\r\n      <div class=\"row my-4\">\r\n        <div class=\"col-sm-12\">\r\n          <button class=\"btn btn-success\" type=\"button\" (click)=\"onAddIngredient()\">Add Ingredient</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { RecipeService } from './../recipes.service';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id: number;\n  editMode: boolean = false;\n  recipeForm: FormGroup;\n  constructor(private route: ActivatedRoute, private recipeService: RecipeService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params)=>{\n      this.id = +params['id'];\n      this.editMode = params['id'] != null;\n      this.initForm();\n    })\n  }\n\n  private initForm(){\n    let recipeName = '';\n    let imagePath = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n    if(this.editMode){\n      const recipe = this.recipeService.getRecipe(this.id);\n      recipeName = recipe.name;\n      imagePath = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if(recipe['ingredients']){\n        recipe['ingredients'].forEach((ingredient)=>{\n          recipeIngredients.push(\n            new FormGroup({\n              'name': new FormControl(ingredient.name,Validators.required),\n              'amount': new FormControl(ingredient.amount,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)]),\n            })\n          );\n        })\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName,Validators.required),\n      'imagePath': new FormControl(imagePath, Validators.required),\n      'description': new FormControl(recipeDescription, Validators.required),\n      'ingredients': recipeIngredients\n    });\n  }\n\n  onSubmit(){\n    // const newRecipe = new Recipe(\n    //   this.recipeForm.get('name').value,\n    //   this.recipeForm.get('description').value,\n    //   this.recipeForm.get('imagePath').value,\n    //   this.recipeForm.get('ingredients').value\n    //   )\n    if(this.editMode){\n      this.recipeService.updateRecipe(this.id, this.recipeForm.value);\n    }else{\n      this.recipeService.addRecipe(this.recipeForm.value);\n    }\n    this.onCancel();\n  }\n\n  onAddIngredient(){\n    (<FormArray>this.recipeForm.get('ingredients')).push(\n      new FormGroup({\n        'name': new FormControl('', Validators.required),\n        'amount': new FormControl(null, [Validators.required, Validators.pattern(/^[1-9]+[0-9]*$/)])\n      })\n    )\n    console.log(this.recipeForm.get('ingredients'));\n    console.log(this.recipeForm);\n  }\n \n  onDeleteIngredient(index: number){\n    (<FormArray>this.recipeForm.get('ingredients')).removeAt(index);\n  }\n\n  onCancel(){\n    this.router.navigate(['../'], {relativeTo: this.route});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Please select a recipe</h3>","import { Recipe } from './../../recipes.model';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n  @Input() i;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  \n}\n","<a \nstyle=\"cursor: pointer;\"\nclass=\"list-group-item clearfix\" \n[routerLink]=\"[i]\"\nrouterLinkActive = 'active'\n>\n  <div class=\"float-start\">\n    <h4 class=\"list-group-item-heading\">{{recipe.name}}</h4>\n    <p class=\"list-group-item-text\">{{recipe.description}}</p>\n  </div>\n  <span class=\"float-end\">\n    <img [src]=\"recipe.imagePath\" [alt]=\"recipe.name\" class=\"img-responsive\" style=\"max-height:50px;\">\n  </span>\n</a>","<div class=\"row\">\n  <div class=\"col-xs-12 pt-3\">\n    <button class=\"btn btn-success\" [routerLink]=\"['new']\">New Recipe</button>\n  </div>\n</div>\n<hr>\n<div class=\"row\">\n  <div class=\"col-xs-12\" *ngIf=\"recipes\" >\n    <app-recipe-item *ngFor=\"let recipeEl of recipes; let i = index\" [recipe]=\"recipeEl\" [i]=\"i\"></app-recipe-item>\n  </div>\n</div>\n","import { Subscription } from 'rxjs';\nimport { RecipeService } from './../recipes.service';\nimport { Recipe } from './../recipes.model';\nimport { Component, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit,OnDestroy {\n  recipes: Recipe[];\n  subscription: Subscription;\n  constructor(private recipeService: RecipeService) { }\n\n  ngOnInit(): void {\n    this.recipes = this.recipeService.getRecipes();\n   this.subscription = this.recipeService.recipesChanged.subscribe((recipes: Recipe[])=>{\n      this.recipes = recipes;\n    })\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n \n}\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { RecipesResolverService } from './../recipes-resolver.service';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { AuthGuard } from './../auth/auth.guard';\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: RecipesComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: '', component: RecipeStartComponent },\r\n      { path: 'new', component: RecipeEditComponent },\r\n      { path: ':id', component: RecipeDetailComponent, resolve: [RecipesResolverService] },\r\n      { path: ':id/edit', component: RecipeEditComponent, resolve: [RecipesResolverService] },\r\n    ]\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RecipesRoutingModule{\r\n\r\n}","import { Recipe } from './recipes.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\nexport class RecipesComponent implements OnInit {\n  selectedRecipe: Recipe;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n   \n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-5\">\n    <app-recipe-list></app-recipe-list>\n  </div>\n  <div class=\"col-md-7\">\n    <!-- <app-recipe-detail [recipe]=\"selectedRecipe\"\n    *ngIf=\"selectedRecipe; else infoText\"\n    ></app-recipe-detail> -->\n    <router-outlet></router-outlet>\n    \n  </div>\n</div>","import { RouterModule } from '@angular/router';\r\nimport { SharedModule } from './../shared/shared.module';\r\nimport { RecipesRoutingModule } from './recipes-routing.module';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    RecipesComponent,\r\n    RecipeListComponent,\r\n    RecipeDetailComponent,\r\n    RecipeItemComponent,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    RecipesRoutingModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    RecipesComponent,\r\n    RecipeListComponent,\r\n    RecipeDetailComponent,\r\n    RecipeItemComponent,\r\n    RecipeStartComponent,\r\n    RecipeEditComponent,\r\n  ]\r\n})\r\nexport class RecipesModule{\r\n\r\n}"],"sourceRoot":"webpack:///"}