{"version":3,"sources":["./src/app/auth/auth.guard.ts"],"names":["AuthGuard","authService","router","route","url","this","user","pipe","createUrlTree"],"mappings":"6FAAA,kGAUO,Y,MAAMA,EACX,YAAoBC,EAAkCC,GAAlC,KAAAD,cAAkC,KAAAC,SACtD,YACEC,EACAD,GACE,MAAkB,aAAfA,EAAOE,IACDC,KAAKJ,YAAYK,KAAKC,KAAK,YAAK,GAAI,YAAID,KAC5BA,GAIVD,KAAKH,OAAOM,cAAc,CAAC,YAGjB,UAAfN,EAAOE,IACJC,KAAKJ,YAAYK,KAAKC,KAAK,YAAK,GAAI,YAAID,IAC5BA,GAIVD,KAAKH,OAAOM,cAAc,CAAC,oBANpC,G,6CAdKR,GAAS,sB,yBAATA,EAAS,QAATA,EAAS,qBAFR,S,GAEP","file":"common.b6667603e7468ed6d938.js","sourcesContent":["import { map, take, tap } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(private authService: AuthService, private router: Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, \r\n    router: RouterStateSnapshot): boolean | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n      if(router.url === '/recipes'){\r\n        return this.authService.user.pipe(take(1), map(user => {\r\n          const isAuth = !!user\r\n          if (isAuth) {\r\n            return true\r\n          }\r\n          return this.router.createUrlTree(['/auth']);\r\n        }));\r\n      }else\r\n        if (router.url === '/auth'){\r\n        return this.authService.user.pipe(take(1), map(user => {\r\n          const isAuth = !!user\r\n          if (!isAuth) {\r\n            return true\r\n          }\r\n          return this.router.createUrlTree(['/recipes']);\r\n        }));\r\n      }  \r\n  }\r\n}"],"sourceRoot":"webpack:///"}